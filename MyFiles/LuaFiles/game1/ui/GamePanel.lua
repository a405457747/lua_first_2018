---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by justi.
--- DateTime: 2024/6/17 11:50
---
---@class GamePanel
local GamePanel=class("GamePanel")


function GamePanel:awake()
    self.handTrans =ue.findCompRecursion(self.trans,"Hand");
    self.GroupTrans =ue.findCompRecursion(self.trans,"Group");
    --结算
    self.centerTrans =ue.findCompRecursion(self.trans,"Center");
    --弃牌
    self.rTrans =ue.findCompRecursion(self.trans,"Right");

    self.sendBtn =ue.findCompRecursion(self.trans,"sendBtn","Button");
    self.dropBtn =ue.findCompRecursion(self.trans,"dropBtn","Button");
    self.pointBtn =ue.findCompRecursion(self.trans,"pointBtn","Button");
    self.flowerBtn =ue.findCompRecursion(self.trans,"flowerBtn","Button");

    self.baseBlueTxt =ue.findCompRecursion(self.trans,"baseBlueTxt","Text");
    self.baseRedTxt =ue.findCompRecursion(self.trans,"baseRedTxt","Text");
    self.centerTypeTxt =ue.findCompRecursion(self.trans,"centerTypeTxt","Text");
    self.centerLvTxt =ue.findCompRecursion(self.trans,"centerLvTxt","Text");
    self.coinTxt =ue.findCompRecursion(self.trans,"coinTxt","Text");
    self.drawPlayCountTxt =ue.findCompRecursion(self.trans,"drawPlayCountTxt","Text");
    self.dumpCountTxt =ue.findCompRecursion(self.trans,"dumpCountTxt","Text");
    self.coinTxt =ue.findCompRecursion(self.trans,"coinTxt","Text");
    self.dollarTxt =ue.findCompRecursion(self.trans,"dollarTxt","Text");
    self.turnCountTxt =ue.findCompRecursion(self.trans,"turnCountTxt","Text");
    self.turnTotalCoinTxt =ue.findCompRecursion(self.trans,"turnTotalCoinTxt","Text");
    self.BottomSelect =ue.findCompRecursion(self.trans,"BottomSelect");



    self.selectItems =ue.transChilds(self.BottomSelect);
    for i, v in pairs(self.selectItems) do
        local btnClick =v:Find("Btn"):GetComponent("Button");
        btnClick.onClick:AddListener(function ()
            self:selectItemFunc(true,i);
        end)
        local jumpClick =v:Find("Btn (1)"):GetComponent("Button");
        jumpClick.onClick:AddListener(function ()
            self:selectItemFunc(false,i);
        end)
    end

    self:TxtAutoAddToSelf("bossNameTxt");
    self:TxtAutoAddToSelf("tagetCoinTxt");
    self:TxtAutoAddToSelf("tagetAwardTxt");

    print("gpTest",self.bossNameTxt,GamePanel.bossNameTxt,self.show_bossNameTxt,GamePanel.show_bossNameTxt);


    self.sendBtn.onClick:AddListener(function()
        G1:sendPoker();
    end)

    self.dropBtn.onClick:AddListener(function()
        G1:dropPoker();
    end)

    self.pointBtn.onClick:AddListener(function ()
        G1:sortByPoint();
    end)

    self.flowerBtn.onClick:AddListener(function ()
            G1:sortByFlower();
    end)

     print("gp awake",self.handTrans);

    self:toggleBlindUI(false);
end

function GamePanel:selectItemFunc(is_click,idx)
    print(string.format("selectItem func call %s %s",tostring(is_click),idx));
    self:toggleBlindUI(false);
    G1:switchState(GAME_State.game_ing_play);
end

function GamePanel:toggleBlindUI(isShow)
    if isShow then
        self.BottomSelect.gameObject:SetActive(true);
    else
        self.BottomSelect.gameObject:SetActive(false);
    end
end

function GamePanel:TxtAutoAddToSelf(txt_name)

    if( self[txt_name])then
        print("Error TxtAutoAddToSelf name repeat!");
    end

    self[txt_name] =ue.findCompRecursion(self.trans,txt_name,"Text");
    self[string.format("show_%s",txt_name)]=function(self,msg)
        self[txt_name].text=msg;
    end
end

function GamePanel:showDrawPlayCount(msg)
    self.drawPlayCountTxt.text=msg;
end
function GamePanel:showDumpCount(msg)
    self.dumpCountTxt.text=msg;
end
function GamePanel:show_coinTxt(msg)
    self.coinTxt.text=msg;
end
function GamePanel:show_dollarTxt(msg)
    self.dollarTxt.text=msg;
end

function GamePanel:show_turnCountTxt(msg)
    self.turnCountTxt.text=msg;
end

function GamePanel:showCenterMsg(blue,red,typeMsg,lv,turnTotal)
    self.baseBlueTxt.text=blue;
    self.baseRedTxt.text=red;
    self.centerTypeTxt.text=typeMsg;
    self.centerLvTxt.text=lv;
    self.turnTotalCoinTxt.text=turnTotal;
end

function GamePanel:addToCenter(go)
    local canvasTrans = self.centerTrans;
    go.transform:SetParent(canvasTrans, false);
end

function GamePanel:addToGroup(go)
    local canvasTrans = self.GroupTrans;
    go.transform:SetParent(canvasTrans, false);
end

function GamePanel:addToHand(go)
    local canvasTrans = self.handTrans;
    go.transform:SetParent(canvasTrans, false);
end

function GamePanel:addToRight(go)
    local canvasTrans = self.rTrans;
    go.transform:SetParent(canvasTrans, false);
end

function GamePanel:delCenterGo()
    local allObjs =ue.transChilds(self.centerTrans);
    for i, v in ipairs(allObjs) do
        GameObject.Destroy(v.gameObject);
    end
end

function GamePanel:delRightGo()
    local allObjs =ue.transChilds(self.rTrans);
    for i, v in ipairs(allObjs) do
        GameObject.Destroy(v.gameObject);
    end
end

return GamePanel;